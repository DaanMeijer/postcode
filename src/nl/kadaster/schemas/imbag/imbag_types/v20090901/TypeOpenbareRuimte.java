//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.10.20 at 11:46:10 AM CEST 
//


package nl.kadaster.schemas.imbag.imbag_types.v20090901;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TypeOpenbareRuimte.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TypeOpenbareRuimte"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Weg"/&gt;
 *     &lt;enumeration value="Water"/&gt;
 *     &lt;enumeration value="Spoorbaan"/&gt;
 *     &lt;enumeration value="Terrein"/&gt;
 *     &lt;enumeration value="Kunstwerk"/&gt;
 *     &lt;enumeration value="Landschappelijk gebied"/&gt;
 *     &lt;enumeration value="Administratief gebied"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TypeOpenbareRuimte")
@XmlEnum
public enum TypeOpenbareRuimte {

    @XmlEnumValue("Weg")
    WEG("Weg"),
    @XmlEnumValue("Water")
    WATER("Water"),
    @XmlEnumValue("Spoorbaan")
    SPOORBAAN("Spoorbaan"),
    @XmlEnumValue("Terrein")
    TERREIN("Terrein"),
    @XmlEnumValue("Kunstwerk")
    KUNSTWERK("Kunstwerk"),
    @XmlEnumValue("Landschappelijk gebied")
    LANDSCHAPPELIJK_GEBIED("Landschappelijk gebied"),
    @XmlEnumValue("Administratief gebied")
    ADMINISTRATIEF_GEBIED("Administratief gebied");
    private final String value;

    TypeOpenbareRuimte(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeOpenbareRuimte fromValue(String v) {
        for (TypeOpenbareRuimte c: TypeOpenbareRuimte.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
